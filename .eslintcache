[{"/Users/fukuda.akito/Documents/my_profile/my-app3/src/index.tsx":"1","/Users/fukuda.akito/Documents/my_profile/my-app3/src/serviceWorker.ts":"2","/Users/fukuda.akito/Documents/my_profile/my-app3/src/features/userSlice.ts":"3","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Auth.tsx":"4","/Users/fukuda.akito/Documents/my_profile/my-app3/src/App.tsx":"5","/Users/fukuda.akito/Documents/my_profile/my-app3/src/firebase/firebase.ts":"6","/Users/fukuda.akito/Documents/my_profile/my-app3/src/firebase/firebase.config.ts":"7","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Feed.tsx":"8","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/PostInput.tsx":"9","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Post.tsx":"10","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/TalkSet.tsx":"11","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/TalkPosts.tsx":"12","/Users/fukuda.akito/Documents/my_profile/my-app3/src/app/store.ts":"13","/Users/fukuda.akito/Documents/my_profile/my-app3/src/features/talkSlice.ts":"14","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/TalkRoom.tsx":"15","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Chats.tsx":"16","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Answers.tsx":"17","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Chat.tsx":"18"},{"size":1204,"mtime":1607417977599,"results":"19","hashOfConfig":"20"},{"size":5424,"mtime":1606719256407,"results":"21","hashOfConfig":"20"},{"size":882,"mtime":1607413034879,"results":"22","hashOfConfig":"20"},{"size":8907,"mtime":1607413420330,"results":"23","hashOfConfig":"20"},{"size":1015,"mtime":1607666535299,"results":"24","hashOfConfig":"20"},{"size":411,"mtime":1606809922803,"results":"25","hashOfConfig":"20"},{"size":407,"mtime":1606809517860,"results":"26","hashOfConfig":"20"},{"size":2656,"mtime":1607408727694,"results":"27","hashOfConfig":"20"},{"size":4210,"mtime":1607229932904,"results":"28","hashOfConfig":"20"},{"size":8504,"mtime":1607758044259,"results":"29","hashOfConfig":"20"},{"size":4316,"mtime":1607666600902,"results":"30","hashOfConfig":"20"},{"size":2264,"mtime":1607495868082,"results":"31","hashOfConfig":"20"},{"size":468,"mtime":1607413302339,"results":"32","hashOfConfig":"20"},{"size":532,"mtime":1607417576910,"results":"33","hashOfConfig":"20"},{"size":3293,"mtime":1607692330965,"results":"34","hashOfConfig":"20"},{"size":777,"mtime":1607609050884,"results":"35","hashOfConfig":"20"},{"size":979,"mtime":1607609820681,"results":"36","hashOfConfig":"20"},{"size":836,"mtime":1607495466976,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"gvo1rg",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fukuda.akito/Documents/my_profile/my-app3/src/index.tsx",[],["80","81"],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/serviceWorker.ts",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/features/userSlice.ts",[],["82","83"],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Auth.tsx",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/App.tsx",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/firebase/firebase.ts",["84"],"import firebase from \"firebase/app\";\nimport firebaseConfig from \"./firebase.config\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();\nexport const provider = new firebase.auth.GoogleAuthProvider();\n","/Users/fukuda.akito/Documents/my_profile/my-app3/src/firebase/firebase.config.ts",[],["85","86"],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Feed.tsx",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/PostInput.tsx",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Post.tsx",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/TalkSet.tsx",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/TalkPosts.tsx",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/app/store.ts",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/features/talkSlice.ts",["87"],"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../app/store\";\n\nexport const talkSlice = createSlice({\n  name: \"talk\",\n  initialState: {\n    talk: { tid: \"\" },\n  },\n  reducers: {\n    setTalk: (state, action) => {\n      state.talk = action.payload;\n    },\n    clearTalk: (state) => {\n      state.talk = { tid: \"\" };\n    },\n  },\n});\n\nexport const { setTalk, clearTalk } = talkSlice.actions;\n\nexport const selectTalk = (state: RootState) => state.talk.talk;\n\nexport default talkSlice.reducer;\n","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/TalkRoom.tsx",["88"],"import { Link } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectTalk } from \"../features/talkSlice\";\nimport { db } from \"../firebase/firebase\";\nimport Answers from \"./Answers\";\nimport Chats from \"./Chats\";\nimport styles from \"./TalkRoom.module.css\";\n\nexport interface CHAT {\n  text: string;\n  type: string;\n}\n\ninterface TALK＿DATA {\n  answers: string[];\n  question: string;\n}\n\nconst TalkRoom: React.FC = () => {\n  const talk = useSelector(selectTalk);\n  const [count, setCount] = useState<number>(1);\n  const [answers, setAnswers] = useState<string[]>([]);\n  const [chats, setChats] = useState<CHAT[]>([]);\n  const [avatar, setAvatar] = useState<string | undefined>(\"\");\n  const [username, setUsername] = useState<string | undefined>(\"\");\n  const [dataList, setDataList] = useState<TALK＿DATA[] | undefined>();\n  const [isContinue, setIsContinue] = useState(true);\n\n  const addChats = (chat: CHAT) => {\n    setChats((prevChat) => {\n      return [...prevChat, chat];\n    });\n  };\n\n  const selectAnswer = (answer: string) => {\n    addChats({\n      text: answer,\n      type: \"answer\",\n    });\n    setCount((prevCount) => {\n      return prevCount + 1;\n    });\n    console.log(count + \"count\");\n    if (dataList) {\n      if (count < dataList.length) {\n        displayNextQuestion(dataList[count]);\n      } else {\n        setIsContinue(false);\n        setTimeout(() => {\n          addChats({\n            text: \"質問は終わり！ありがとう！！\",\n            type: \"question\",\n          });\n        }, 500);\n      }\n    }\n  };\n\n  const displayNextQuestion = (data: TALK＿DATA) => {\n    console.log(data);\n    if (data) {\n      setTimeout(() => {\n        addChats({\n          text: data.question,\n          type: \"question\",\n        });\n        setAnswers(data.answers);\n      }, 500);\n    }\n  };\n\n  useEffect(() => {\n    let unmounted = false;\n    const initData: TALK＿DATA[] = [];\n\n    db.collection(\"talks\")\n      .doc(talk.tid)\n      .get()\n      .then((snapshot) => {\n        if (!unmounted) {\n          setAvatar(snapshot.data()?.avatar);\n          setUsername(snapshot.data()?.username);\n          const len = snapshot.data()?.dataList.length;\n          for (let i = 0; i < len; i++) {\n            initData[i] = snapshot.data()?.dataList[i];\n          }\n          displayNextQuestion(initData[0]);\n          setDataList(initData);\n        }\n      });\n\n    const unmount = () => {\n      unmounted = true;\n    };\n\n    return () => {\n      unmount();\n    };\n  }, []);\n\n  useEffect(() => {\n    const scrollArea = document.getElementById(\"scroll-area\");\n    if (scrollArea) {\n      scrollArea.scrollTop = scrollArea.scrollHeight;\n    }\n  });\n\n  return (\n    <section className={styles.talkRoom_section}>\n      <div className={styles.talkRoom_box}>\n        <div className={styles.talkRoom_header}>\n          <Link to=\"talkposts\" className={styles.talkRoom_link}>\n            ←戻る\n          </Link>\n          <p className={styles.talkRoom_username}>@{username}</p>\n        </div>\n        <Chats chats={chats} avatar={avatar} />\n        {isContinue && (\n          <Answers answers={answers} selectAnswer={selectAnswer} />\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default TalkRoom;\n","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Chats.tsx",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Answers.tsx",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Chat.tsx",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":7,"column":7,"nodeType":"97","messageId":"98","endLine":7,"endColumn":18},{"ruleId":"89","replacedBy":"99"},{"ruleId":"91","replacedBy":"100"},{"ruleId":"95","severity":1,"message":"101","line":1,"column":23,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"102","severity":1,"message":"103","line":100,"column":6,"nodeType":"104","endLine":100,"endColumn":8,"suggestions":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],["106"],["107"],"@typescript-eslint/no-unused-vars","'firebaseApp' is assigned a value but never used.","Identifier","unusedVar",["106"],["107"],"'PayloadAction' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'displayNextQuestion' and 'talk.tid'. Either include them or remove the dependency array.","ArrayExpression",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [displayNextQuestion, talk.tid]",{"range":"111","text":"112"},[2525,2527],"[displayNextQuestion, talk.tid]"]