[{"/Users/fukuda.akito/Documents/my_profile/my-app3/src/index.tsx":"1","/Users/fukuda.akito/Documents/my_profile/my-app3/src/serviceWorker.ts":"2","/Users/fukuda.akito/Documents/my_profile/my-app3/src/features/userSlice.ts":"3","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Auth.tsx":"4","/Users/fukuda.akito/Documents/my_profile/my-app3/src/App.tsx":"5","/Users/fukuda.akito/Documents/my_profile/my-app3/src/firebase/firebase.ts":"6","/Users/fukuda.akito/Documents/my_profile/my-app3/src/firebase/firebase.config.ts":"7","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Feed.tsx":"8","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/PostInput.tsx":"9","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Post.tsx":"10","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/TalkSet.tsx":"11","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/TalkPosts.tsx":"12","/Users/fukuda.akito/Documents/my_profile/my-app3/src/app/store.ts":"13","/Users/fukuda.akito/Documents/my_profile/my-app3/src/features/talkSlice.ts":"14","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/TalkRoom.tsx":"15","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Chats.tsx":"16","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Answers.tsx":"17","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Chat.tsx":"18"},{"size":1204,"mtime":1607417977599,"results":"19","hashOfConfig":"20"},{"size":5424,"mtime":1606719256407,"results":"21","hashOfConfig":"20"},{"size":882,"mtime":1607413034879,"results":"22","hashOfConfig":"20"},{"size":8907,"mtime":1607413420330,"results":"23","hashOfConfig":"20"},{"size":1020,"mtime":1607306057665,"results":"24","hashOfConfig":"20"},{"size":411,"mtime":1606809922803,"results":"25","hashOfConfig":"20"},{"size":407,"mtime":1606809517860,"results":"26","hashOfConfig":"20"},{"size":2656,"mtime":1607408727694,"results":"27","hashOfConfig":"20"},{"size":4210,"mtime":1607229932904,"results":"28","hashOfConfig":"20"},{"size":8000,"mtime":1607238290477,"results":"29","hashOfConfig":"20"},{"size":4335,"mtime":1607476720073,"results":"30","hashOfConfig":"20"},{"size":2264,"mtime":1607495868082,"results":"31","hashOfConfig":"20"},{"size":468,"mtime":1607413302339,"results":"32","hashOfConfig":"20"},{"size":532,"mtime":1607417576910,"results":"33","hashOfConfig":"20"},{"size":3551,"mtime":1607610251451,"results":"34","hashOfConfig":"20"},{"size":777,"mtime":1607609050884,"results":"35","hashOfConfig":"20"},{"size":979,"mtime":1607609820681,"results":"36","hashOfConfig":"20"},{"size":836,"mtime":1607495466976,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"gvo1rg",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fukuda.akito/Documents/my_profile/my-app3/src/index.tsx",[],["79","80"],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/serviceWorker.ts",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/features/userSlice.ts",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Auth.tsx",[],["81","82"],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/App.tsx",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/firebase/firebase.ts",["83"],"import firebase from \"firebase/app\";\nimport firebaseConfig from \"./firebase.config\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();\nexport const provider = new firebase.auth.GoogleAuthProvider();\n","/Users/fukuda.akito/Documents/my_profile/my-app3/src/firebase/firebase.config.ts",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Feed.tsx",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/PostInput.tsx",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Post.tsx",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/TalkSet.tsx",["84"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport { db } from \"../firebase/firebase\";\nimport {\n  IconButton,\n  TextField,\n  Typography,\n  Button,\n  Avatar,\n} from \"@material-ui/core\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport styles from \"./TalkSet.module.css\";\nimport { Link } from \"react-router-dom\";\n\ninterface DATA {\n  question: string;\n  answers: string[];\n}\n\nconst TalkSet: React.FC = () => {\n  const user = useSelector(selectUser);\n  const [answer, setAnswer] = useState(\"\");\n  const [question, setQuestion] = useState(\"\");\n  const [answers, setAnswers] = useState<string[]>([]);\n  const [dataList, setDataList] = useState<DATA[]>([]);\n\n  const sendChatsData = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    await db.collection(\"talks\").doc(user.uid).set({\n      avatar: user.photoUrl,\n      dataList: dataList,\n      username: user.displayName,\n    });\n    setDataList([]);\n  };\n\n  return (\n    <div className={styles.talkSet_contain}>\n      <Link to=\"/\" className={styles.talkSet_link}>\n        <IconButton>\n          <Typography component=\"div\" className={styles.talkSet_headerPram}>\n            Homeへ\n          </Typography>\n          <HomeIcon />\n        </IconButton>\n      </Link>\n      <div className={styles.talkSet_main}>\n        <h2>会話を作成する！</h2>\n        <form onSubmit={sendChatsData}>\n          <div>\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              label=\"質問したい事を書いてね\"\n              value={question}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setQuestion(e.target.value);\n              }}\n            />\n          </div>\n          <div className={styles.mb_md}></div>\n          <div className={styles.talkSet_answerArea}>\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              label=\"回答の選択肢を書こう\"\n              value={answer}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setAnswer(e.target.value);\n              }}\n            />\n            <button\n              disabled={!question || !answer}\n              className={\n                !question || !answer\n                  ? styles.talkSet_btnDisable\n                  : styles.talkSet_btn\n              }\n              onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                e.preventDefault();\n                setAnswers((prevAnswers) => {\n                  return [...prevAnswers, answer];\n                });\n                setAnswer(\"\");\n              }}\n            >\n              回答追加\n            </button>\n          </div>\n          <div>\n            <h3>設定中の会話</h3>\n            <p className={styles.talkSet_displayPram}>&lt;質問&gt;</p>\n            <p className={styles.talkSet_displayQuestion}>{question}</p>\n            <p className={styles.talkSet_displayPram}>&lt;回答&gt;</p>\n            {answers && (\n              <ul className={styles.talkSet_list}>\n                {answers.map((answer, index) => (\n                  <li key={index.toString()}>{`${index + 1}.\\n${answer}`}</li>\n                ))}\n              </ul>\n            )}\n          </div>\n          <div className={styles.talkSet_btns}>\n            <Button\n              disabled={!question || !answers[0]}\n              variant=\"contained\"\n              color=\"secondary\"\n              className={styles.talkSet_dataListetBtn}\n              onClick={() => {\n                const data = { question: question, answers: answers };\n                setDataList((prevDataList) => {\n                  return [...prevDataList, data];\n                });\n                setQuestion(\"\");\n                setAnswers([]);\n              }}\n            >\n              この会話を設定する！\n            </Button>\n            <Button\n              disabled={!dataList[0]}\n              variant=\"contained\"\n              color=\"primary\"\n              className={styles.talkSet_submitBtn}\n              type=\"submit\"\n            >\n              作成！！\n            </Button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default TalkSet;\n","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/TalkPosts.tsx",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/app/store.ts",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/features/talkSlice.ts",["85"],"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../app/store\";\n\nexport const talkSlice = createSlice({\n  name: \"talk\",\n  initialState: {\n    talk: { tid: \"\" },\n  },\n  reducers: {\n    setTalk: (state, action) => {\n      state.talk = action.payload;\n    },\n    clearTalk: (state) => {\n      state.talk = { tid: \"\" };\n    },\n  },\n});\n\nexport const { setTalk, clearTalk } = talkSlice.actions;\n\nexport const selectTalk = (state: RootState) => state.talk.talk;\n\nexport default talkSlice.reducer;\n","/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/TalkRoom.tsx",["86","87"],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Chats.tsx",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Answers.tsx",[],"/Users/fukuda.akito/Documents/my_profile/my-app3/src/components/Chat.tsx",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"88","replacedBy":"92"},{"ruleId":"90","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":7,"column":7,"nodeType":"96","messageId":"97","endLine":7,"endColumn":18},{"ruleId":"94","severity":1,"message":"98","line":10,"column":3,"nodeType":"96","messageId":"97","endLine":10,"endColumn":9},{"ruleId":"94","severity":1,"message":"99","line":1,"column":23,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"100","line":20,"column":11,"nodeType":"96","messageId":"97","endLine":20,"endColumn":15},{"ruleId":"101","severity":1,"message":"102","line":110,"column":6,"nodeType":"103","endLine":110,"endColumn":8,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],["105"],["106"],"@typescript-eslint/no-unused-vars","'firebaseApp' is assigned a value but never used.","Identifier","unusedVar","'Avatar' is defined but never used.","'PayloadAction' is defined but never used.","'TALK' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'count', 'displayNextQuestion', and 'talk.tid'. Either include them or remove the dependency array.","ArrayExpression",["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Update the dependencies array to be: [count, displayNextQuestion, talk.tid]",{"range":"110","text":"111"},[2791,2793],"[count, displayNextQuestion, talk.tid]"]